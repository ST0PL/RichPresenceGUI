<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ControlsLib.Controls">
    <Style TargetType="{x:Type controls:CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource OptionMark.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource OptionMark.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource OptionMark.Static.Glyph}"/>
        <Setter Property="TitleOpacity" Value="1"/>
        <Setter Property="TitleForeground" Value="Black"/>
        <Setter Property="TitleFontSize" Value="12"/>
        <Setter Property="CheckHeight" Value="12"/>
        <Setter Property="CheckWidth" Value="12"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Viewbox Width="{TemplateBinding CheckWidth}"
                                         Height="{TemplateBinding CheckHeight}">
                                    <Path x:Name="optionMark"
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z"
                                          Fill="{TemplateBinding Foreground}"
                                          Margin="1"
                                          Opacity="0"
                                          Stretch="None"/>
                                </Viewbox>
                            </Grid>
                        </Border>
                        <TextBlock x:Name="text"
                                   Margin="5,0,0,0"
                                   TextWrapping="Wrap"
                                   Grid.Column="1"
                                   Text="{TemplateBinding Title}"
                                   Foreground="{TemplateBinding TitleForeground}"
                                   FontWeight="{TemplateBinding TitleFontWeight}"
                                   FontSize="{TemplateBinding TitleFontSize}"
                                   Opacity="{TemplateBinding TitleOpacity}"
                                   Focusable="False"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>