<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ControlsLib.Controls">
    <Style TargetType="{x:Type controls:ImageRadioButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource RadioButton.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Static.Border}"/>
        <Setter Property="CheckedBorderBrush" Value="{DynamicResource RadioButton.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ImageRadioButton}">
                    <Border x:Name="radioButtonBorder"
                            Padding="{TemplateBinding Padding}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Image x:Name="img"
                                    Margin="{TemplateBinding ImageMargin}"
                                    Source="{TemplateBinding ImageSource}"
                                    Width="{TemplateBinding ImageWidth}"
                                    Height="{TemplateBinding ImageHeight}"/>
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Focusable="False"
                                              Margin="{TemplateBinding ContentMargin}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HoverBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedBackgroundColor}"/>
                            <Setter Property="TextBox.Foreground" TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedForegroundColor}"/>
                            <Setter Property="Source" TargetName="img" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedImageSource}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClickBackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>